自己刚开始想的，数少的话可以通过，多的话就超出时间限制了，while for循环嵌套太多。
class Solution {
public:
    int minSubArrayLen(int target, vector<int>& nums) {
        int i=1;
        while(i<=nums.size()){
            int j;
            for(j=0;j<=nums.size()-i;j++){
                int sum=0;
                for(int k=j;k<j+i;k++){
                    sum=sum+nums[k];
                }
                 if(sum>=target){
                    return i;
                 }
                 if(sum<target&&i==nums.size()){
                    return 0;
                  }
                
            
            }
            i++;

        }
        return i;


    }
};
优化过的滑动窗口，只有两层循环了
class Solution {
public:
    int minSubArrayLen(int target, vector<int>& nums) {
        int left=0;
        int right;
        int n=nums.size();
        int sum=0;
        int ans=n+1;
        for(right=0;right<n;right++){
            sum=sum+nums[right];
            while(sum-nums[left]>=target){
                sum=sum-nums[left];
                left++;
                
            }
            if(sum>=target){
                ans=min(ans,right-left+1);
              }
            
            
        }
        return ans<=n?ans:0;
        
        
    }
};
