sort函数排序时间占用复杂度有点高。
双指针等我今天自己想想。
class Solution {
public:
    vector<int> sortedSquares(vector<int>& nums) {
        vector<int>ans;
        int i=0;
        while(i<nums.size()){
            ans.push_back(nums[i]*nums[i]);
            i++;
            
        }
        sort(ans.begin(),ans.end());
        return ans;
        

    }
};
双指针：这个方法真的真的被安利到了/
class Solution {
public:
    vector<int> sortedSquares(vector<int>& nums) {
        int k=nums.size()-1;
        int slow;
        int fast=nums.size()-1;
        vector<int>A(nums.size(),0);
        for(slow=0;slow<=fast;){
            if(nums[slow]*nums[slow]<nums[fast]*nums[fast]){
                A[k]=nums[fast]*nums[fast];
                k--;
                fast--;
            }else if(nums[slow]*nums[slow]>=nums[fast]*nums[fast]){
                A[k]=nums[slow]*nums[slow];
                k--;
                slow++;

            }
           
        }
        return A;
    }
   
       
};
